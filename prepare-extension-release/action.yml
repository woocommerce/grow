name: Prepare extension release
description: Create the release branch & PR with checklist.

inputs:
  version:
    description: 'Version number to be released'
    required: true
  type:
    description: 'Type of the release (release|hotfix)'
    required: true
    default: 'release'
  wp-version:
    description: 'WordPress tested up to'
  wc-version:
    description: 'WooCommerce tested up to'
  main-branch:
    description: 'Where release branches are merged'
    required: true
    default: 'trunk'
  pre-steps:
    description: 'Additional steps to be added before running woorelease'
    default: ''
  post-steps:
    description: 'Additional steps to be added after running woorelease'
    default: ''

outputs:
  branch-name:
    description: "Branch name"
    value: ${{ steps.release-vars.outputs.branch }}
  pr:
    description: "Pull request"
    value: ${{ steps.prepare-release-pr.outputs.result }}

runs:
  using: composite
  steps:
    - name: Set release branch name
      id: release-vars
      shell: bash
      run: echo "branch=${{ inputs.type }}/${{ inputs.version }}" >> $GITHUB_OUTPUT

    - name: Prepare release commits
      shell: bash
       # Use the github-actions bot account to commit.
       # https://api.github.com/users/github-actions%5Bbot%5D
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        git checkout -b ${{ steps.release-vars.outputs.branch }}

        git commit --allow-empty -q -m "Start \`${{ steps.release-vars.outputs.branch }}\`."
        git push --set-upstream origin ${{ steps.release-vars.outputs.branch }}
    - name: Create a pull request for the release
      id: prepare-release-pr
      uses: actions/github-script@v6
      with:
        script: |
          const action_path = '${{ github.action_path }}';
          const inputs = ${{ toJSON(inputs) }};

          const { default: script } = await import( `${ action_path }/woo-extension-create-pr-for-release.mjs` );
          return await script( {
            context,
            github,
            inputs,
            refName: '${{ steps.release-vars.outputs.branch }}'
          } );
    - name: Generate summary
      shell: bash
      run: |
        echo "Release PR created at ${{  fromJSON(steps.prepare-release-pr.outputs.result).html_url }}" >> $GITHUB_STEP_SUMMARY


